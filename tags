	Session.vim	/^cmap  <Home>$/;"	m
	Session.vim	/^cmap  <Left>$/;"	m
	Session.vim	/^cnoremap  <Del>$/;"	m
	Session.vim	/^cmap  <End>$/;"	m
	Session.vim	/^cmap  <Right>$/;"	m
S	Session.vim	/^imap S <Plug>ISurround$/;"	m
s	Session.vim	/^imap s <Plug>Isurround$/;"	m
	Session.vim	/^cnoremap  <BS>$/;"	m
		Session.vim	/^inoremap <silent> 	 =TriggerSnippet()$/;"	m
	Session.vim	/^map   \/$/;"	m
	Session.vim	/^cnoremap  $/;"	m
	Session.vim	/^noremap  :JavaBrowser$/;"	m
	Session.vim	/^cmap  <Down>$/;"	m
	Session.vim	/^imap  <Plug>SuperTabForward$/;"	m
	Session.vim	/^cmap  <Up>$/;"	m
	Session.vim	/^imap  <Plug>SuperTabBackward$/;"	m
		Session.vim	/^inoremap <silent> 	 =ShowAvailableSnips()$/;"	m
	Session.vim	/^imap  <Plug>Isurround$/;"	m
	Session.vim	/^map  :WMToggle$/;"	m
,	Session.vim	/^imap , <Plug>ZenCodingExpandAbbr$/;"	m
,	Session.vim	/^nmap , <Plug>ZenCodingExpandNormal$/;"	m
,	Session.vim	/^vmap , <Plug>ZenCodingExpandVisual$/;"	m
/	Session.vim	/^imap \/ <Plug>ZenCodingToggleComment$/;"	m
/	Session.vim	/^nmap \/ <Plug>ZenCodingToggleComment$/;"	m
;	Session.vim	/^imap ; <Plug>ZenCodingExpandWord$/;"	m
A	Session.vim	/^imap A <Plug>ZenCodingAnchorizeSummary$/;"	m
A	Session.vim	/^nmap A <Plug>ZenCodingAnchorizeSummary$/;"	m
D	Session.vim	/^imap D <Plug>ZenCodingBalanceTagOutwardInsert$/;"	m
D	Session.vim	/^nmap D <Plug>ZenCodingBalanceTagOutwardNormal$/;"	m
D	Session.vim	/^vmap D <Plug>ZenCodingBalanceTagOutwardVisual$/;"	m
N	Session.vim	/^imap N <Plug>ZenCodingPrev$/;"	m
N	Session.vim	/^nmap N <Plug>ZenCodingPrev$/;"	m
a	Session.vim	/^imap a <Plug>ZenCodingAnchorizeURL$/;"	m
a	Session.vim	/^nmap a <Plug>ZenCodingAnchorizeURL$/;"	m
c	Session.vim	/^vmap c <Plug>ZenCodingCodePretty$/;"	m
d	Session.vim	/^imap d <Plug>ZenCodingBalanceTagInwardInsert$/;"	m
d	Session.vim	/^nmap d <Plug>ZenCodingBalanceTagInwardNormal$/;"	m
d	Session.vim	/^vmap d <Plug>ZenCodingBalanceTagInwardVisual$/;"	m
i	Session.vim	/^imap i <Plug>ZenCodingImageSize$/;"	m
i	Session.vim	/^nmap i <Plug>ZenCodingImageSize$/;"	m
j	Session.vim	/^imap j <Plug>ZenCodingSplitJoinTagInsert$/;"	m
j	Session.vim	/^nmap j <Plug>ZenCodingSplitJoinTagNormal$/;"	m
k	Session.vim	/^imap k <Plug>ZenCodingRemoveTag$/;"	m
k	Session.vim	/^nmap k <Plug>ZenCodingRemoveTag$/;"	m
m	Session.vim	/^vmap m <Plug>ZenCodingMergeLines$/;"	m
n	Session.vim	/^imap n <Plug>ZenCodingNext$/;"	m
n	Session.vim	/^nmap n <Plug>ZenCodingNext$/;"	m
c	Session.vim	/^nmap c :cs find c =expand("<cword>")$/;"	m
d	Session.vim	/^nmap d :cs find d =expand("<cword>")$/;"	m
e	Session.vim	/^nmap e :cs find e =expand("<cword>")$/;"	m
f	Session.vim	/^nmap f :cs find f =expand("<cfile>")$/;"	m
g	Session.vim	/^nmap g :cs find g =expand("<cword>")$/;"	m
i	Session.vim	/^nmap i :cs find i ^=expand("<cfile>")$/;"	m
s	Session.vim	/^nmap s :cs find s =expand("<cword>")$/;"	m
t	Session.vim	/^nmap t :cs find t =expand("<cword>")$/;"	m
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$<	Session.vim	/^vnoremap $< `>a -->`<i<!-- $/;"	m
$$	Session.vim	/^vnoremap $$ `>a"`<i"$/;"	m
$/	Session.vim	/^vnoremap $\/ `>a*\/`<i\/*$/;"	m
$1	Session.vim	/^vnoremap $1 `>a)`<i($/;"	m
$2	Session.vim	/^vnoremap $2 `>a]`<i[$/;"	m
$3	Session.vim	/^vnoremap $3 `>a}`<i{$/;"	m
$q	Session.vim	/^vnoremap $q `>a'`<i'$/;"	m
$td	Session.vim	/^cnoremap $td tabnew ~\/Desktop\/$/;"	m
$th	Session.vim	/^cnoremap $th tabnew ~\/$/;"	m
$w	Session.vim	/^vnoremap $w `>a"`<i"$/;"	m
'top'	blogs_20130128.html	/^  <h1><a name='top' href="http:\/\/my.oschina.net\/u\/236164\/blog">ufo.22940268ÁöÑÂçöÂÆ¢@OSCHINA<\/a><\/h1>$/;"	a
,$	Session.vim	/^map ,$ :syntax sync fromstart$/;"	m
,,B	Session.vim	/^nnoremap <silent> ,,B :call EasyMotion#WBW(0, 1)$/;"	m
,,B	Session.vim	/^onoremap <silent> ,,B :call EasyMotion#WBW(0, 1)$/;"	m
,,B	Session.vim	/^vnoremap <silent> ,,B :call EasyMotion#WBW(1, 1)$/;"	m
,,E	Session.vim	/^nnoremap <silent> ,,E :call EasyMotion#EW(0, 0)$/;"	m
,,E	Session.vim	/^onoremap <silent> ,,E :call EasyMotion#EW(0, 0)$/;"	m
,,E	Session.vim	/^vnoremap <silent> ,,E :call EasyMotion#EW(1, 0)$/;"	m
,,F	Session.vim	/^nnoremap <silent> ,,F :call EasyMotion#F(0, 1)$/;"	m
,,F	Session.vim	/^onoremap <silent> ,,F :call EasyMotion#F(0, 1)$/;"	m
,,F	Session.vim	/^vnoremap <silent> ,,F :call EasyMotion#F(1, 1)$/;"	m
,,N	Session.vim	/^nnoremap <silent> ,,N :call EasyMotion#Search(0, 1)$/;"	m
,,N	Session.vim	/^onoremap <silent> ,,N :call EasyMotion#Search(0, 1)$/;"	m
,,N	Session.vim	/^vnoremap <silent> ,,N :call EasyMotion#Search(1, 1)$/;"	m
,,T	Session.vim	/^nnoremap <silent> ,,T :call EasyMotion#T(0, 1)$/;"	m
,,T	Session.vim	/^onoremap <silent> ,,T :call EasyMotion#T(0, 1)$/;"	m
,,T	Session.vim	/^vnoremap <silent> ,,T :call EasyMotion#T(1, 1)$/;"	m
,,W	Session.vim	/^nnoremap <silent> ,,W :call EasyMotion#WBW(0, 0)$/;"	m
,,W	Session.vim	/^onoremap <silent> ,,W :call EasyMotion#WBW(0, 0)$/;"	m
,,W	Session.vim	/^vnoremap <silent> ,,W :call EasyMotion#WBW(1, 0)$/;"	m
,,b	Session.vim	/^nnoremap <silent> ,,b :call EasyMotion#WB(0, 1)$/;"	m
,,b	Session.vim	/^onoremap <silent> ,,b :call EasyMotion#WB(0, 1)$/;"	m
,,b	Session.vim	/^vnoremap <silent> ,,b :call EasyMotion#WB(1, 1)$/;"	m
,,e	Session.vim	/^nnoremap <silent> ,,e :call EasyMotion#E(0, 0)$/;"	m
,,e	Session.vim	/^onoremap <silent> ,,e :call EasyMotion#E(0, 0)$/;"	m
,,e	Session.vim	/^vnoremap <silent> ,,e :call EasyMotion#E(1, 0)$/;"	m
,,f	Session.vim	/^nnoremap <silent> ,,f :call EasyMotion#F(0, 0)$/;"	m
,,f	Session.vim	/^onoremap <silent> ,,f :call EasyMotion#F(0, 0)$/;"	m
,,f	Session.vim	/^vnoremap <silent> ,,f :call EasyMotion#F(1, 0)$/;"	m
,,gE	Session.vim	/^nnoremap <silent> ,,gE :call EasyMotion#EW(0, 1)$/;"	m
,,gE	Session.vim	/^onoremap <silent> ,,gE :call EasyMotion#EW(0, 1)$/;"	m
,,gE	Session.vim	/^vnoremap <silent> ,,gE :call EasyMotion#EW(1, 1)$/;"	m
,,ge	Session.vim	/^nnoremap <silent> ,,ge :call EasyMotion#E(0, 1)$/;"	m
,,ge	Session.vim	/^onoremap <silent> ,,ge :call EasyMotion#E(0, 1)$/;"	m
,,ge	Session.vim	/^vnoremap <silent> ,,ge :call EasyMotion#E(1, 1)$/;"	m
,,j	Session.vim	/^nnoremap <silent> ,,j :call EasyMotion#JK(0, 0)$/;"	m
,,j	Session.vim	/^onoremap <silent> ,,j :call EasyMotion#JK(0, 0)$/;"	m
,,j	Session.vim	/^vnoremap <silent> ,,j :call EasyMotion#JK(1, 0)$/;"	m
,,k	Session.vim	/^nnoremap <silent> ,,k :call EasyMotion#JK(0, 1)$/;"	m
,,k	Session.vim	/^onoremap <silent> ,,k :call EasyMotion#JK(0, 1)$/;"	m
,,k	Session.vim	/^vnoremap <silent> ,,k :call EasyMotion#JK(1, 1)$/;"	m
,,n	Session.vim	/^nnoremap <silent> ,,n :call EasyMotion#Search(0, 0)$/;"	m
,,n	Session.vim	/^onoremap <silent> ,,n :call EasyMotion#Search(0, 0)$/;"	m
,,n	Session.vim	/^vnoremap <silent> ,,n :call EasyMotion#Search(1, 0)$/;"	m
,,t	Session.vim	/^nnoremap <silent> ,,t :call EasyMotion#T(0, 0)$/;"	m
,,t	Session.vim	/^onoremap <silent> ,,t :call EasyMotion#T(0, 0)$/;"	m
,,t	Session.vim	/^vnoremap <silent> ,,t :call EasyMotion#T(1, 0)$/;"	m
,,w	Session.vim	/^nnoremap <silent> ,,w :call EasyMotion#WB(0, 0)$/;"	m
,,w	Session.vim	/^onoremap <silent> ,,w :call EasyMotion#WB(0, 0)$/;"	m
,,w	Session.vim	/^vnoremap <silent> ,,w :call EasyMotion#WB(1, 0)$/;"	m
,1	Session.vim	/^map ,1 :set syntax=cheetah$/;"	m
,2	Session.vim	/^map ,2 :set syntax=xhtml$/;"	m
,3	Session.vim	/^map ,3 :set syntax=python$/;"	m
,4	Session.vim	/^map ,4 :set ft=javascript$/;"	m
,ac	Session.vim	/^map ,ac :!adb_connect && pactive $TARGET$/;"	m
,al	Session.vim	/^map ,al :!adb_connect&&adb logcat$/;"	m
,b	Session.vim	/^nnoremap <silent> ,b :CommandTBuffer$/;"	m
,bc	Session.vim	/^noremap <silent> ,bc :!find . -name *.java > cscope.files && cscope -b -q$/;"	m
,bt	Session.vim	/^map <silent> ,bt :!ctags -R --exclude=\\.* $/;"	m
,c	Session.vim	/^nmap ,c  <Plug>NERDCommenterToggle$/;"	m
,c$	Session.vim	/^nmap ,c$ <Plug>NERDCommenterToEOL$/;"	m
,cA	Session.vim	/^nmap ,cA <Plug>NERDCommenterAppend$/;"	m
,cD	Session.vim	/^nmap <silent> ,cD <Plug>VCSDelete$/;"	m
,cG	Session.vim	/^nmap <silent> ,cG <Plug>VCSClearAndGotoOriginal$/;"	m
,cL	Session.vim	/^nmap <silent> ,cL <Plug>VCSLock$/;"	m
,cN	Session.vim	/^nmap <silent> ,cN <Plug>VCSSplitAnnotate$/;"	m
,cU	Session.vim	/^nmap <silent> ,cU <Plug>VCSUnlock$/;"	m
,ca	Session.vim	/^nmap ,ca <Plug>NERDCommenterAltDelims$/;"	m
,caL	Session.vim	/^nmap ,caL <Plug>CalendarH$/;"	m
,cal	Session.vim	/^nmap ,cal <Plug>CalendarV$/;"	m
,cb	Session.vim	/^nmap ,cb <Plug>NERDCommenterAlignBoth$/;"	m
,cc	Session.vim	/^nmap ,cc <Plug>NERDCommenterComment$/;"	m
,cd	Session.vim	/^noremap ,cd :call CdToProjectRoot()$/;"	m
,cg	Session.vim	/^nmap <silent> ,cg <Plug>VCSGotoOriginal$/;"	m
,ci	Session.vim	/^nmap ,ci <Plug>NERDCommenterInvert$/;"	m
,cl	Session.vim	/^nmap ,cl <Plug>NERDCommenterAlignLeft$/;"	m
,cm	Session.vim	/^nmap ,cm <Plug>NERDCommenterMinimal$/;"	m
,cn	Session.vim	/^nmap ,cn <Plug>NERDCommenterNested$/;"	m
,cp	Session.vim	/^vnoremap ,cp :call CopySelectionLines()$/;"	m
,cq	Session.vim	/^nmap <silent> ,cq <Plug>VCSRevert$/;"	m
,cr	Session.vim	/^nmap <silent> ,cr <Plug>VCSReview$/;"	m
,cs	Session.vim	/^nmap ,cs <Plug>NERDCommenterSexy$/;"	m
,cu	Session.vim	/^nmap ,cu <Plug>NERDCommenterUncomment$/;"	m
,cv	Session.vim	/^nmap <silent> ,cv <Plug>VCSVimDiff$/;"	m
,cy	Session.vim	/^nmap ,cy <Plug>NERDCommenterYank$/;"	m
,dd	Session.vim	/^noremap ,dd :call DebugInnerOuterContacts()$/;"	m
,es	Session.vim	/^nmap ,es :call EditSnippet()$/;"	m
,et	Session.vim	/^nmap ,et :exec "e ~\/.vim\/ftplugin\/".&filetype.".vim"$/;"	m
,fb	Session.vim	/^noremap ,fb viB:g!#^.*\/\/#Tabularize \/,$/;"	m
,fd	Session.vim	/^nmap ,fd :se ff=dos$/;"	m
,fu	Session.vim	/^nmap ,fu :se ff=unix$/;"	m
,m	Session.vim	/^noremap ,m :make$/;"	m
,p	Session.vim	/^vnoremap ,p :call EchoSelectionLines()$/;"	m
,pl	Session.vim	/^noremap ,pl :call PushLarge()$/;"	m
,pt	Session.vim	/^map ,pt :set invpaste$/;"	m
,py	Session.vim	/^noremap ,py :call PushYlzhao()$/;"	m
,q	Session.vim	/^map ,q :e ~\/buffer$/;"	m
,rr	Session.vim	/^nmap ,rr :call ReloadSnippets(snippets_dir, &filetype)$/;"	m
,s	Session.vim	/^map ,s :so ~\/.vimrc$/;"	m
,s?	Session.vim	/^map ,s? z=$/;"	m
,sa	Session.vim	/^map ,sa zg$/;"	m
,scd	Session.vim	/^nmap ,scd <Plug>SQLUGetColumnDef$/;"	m
,scdt	Session.vim	/^nmap ,scdt <Plug>SQLUGetColumnDataType$/;"	m
,scl	Session.vim	/^nmap ,scl <Plug>SQLUCreateColumnList$/;"	m
,scp	Session.vim	/^nmap ,scp <Plug>SQLUCreateProcedure$/;"	m
,sf	Session.vim	/^nmap ,sf <Plug>SQLUFormatter$/;"	m
,sf	Session.vim	/^vmap ,sf <Plug>SQLUFormatter$/;"	m
,sfr	Session.vim	/^nmap ,sfr <Plug>SQLUFormatStmts$/;"	m
,sfr	Session.vim	/^vmap ,sfr <Plug>SQLUFormatStmts$/;"	m
,sfs	Session.vim	/^nmap ,sfs <Plug>SQLUFormatter$/;"	m
,sfs	Session.vim	/^vmap ,sfs <Plug>SQLUFormatter$/;"	m
,sn	Session.vim	/^map ,sn ]$/;"	m
,sp	Session.vim	/^map ,sp [$/;"	m
,t	Session.vim	/^nnoremap <silent> ,t :CommandT$/;"	m
,tc	Session.vim	/^noremap ,tc :!adb_connect$/;"	m
,tcd	Session.vim	/^noremap ,tcd :call ClearDb()$/;"	m
,tr	Session.vim	/^noremap ,tr :!adb shell stop; sleep 2; adb shell start$/;"	m
,ts	Session.vim	/^noremap ,ts :!target_sync$/;"	m
,u	Session.vim	/^noremap ,u hgUiwe$/;"	m
,v	Session.vim	/^map ,v :e ~\/.vimrc$/;"	m
,va	Session.vim	/^map ,va :e ~\/.config\/awesome\/rc.lua$/;"	m
,vcg	Session.vim	/^noremap ,vcg :e =language_dir$/;"	m
,vcs	Session.vim	/^noremap ,vcs :e res\/values-zh-rCN\/strings.xml$/;"	m
,veg	Session.vim	/^noremap ,veg :e =language_dir$/;"	m
,ves	Session.vim	/^noremap ,ves :e language_dir$/;"	m
,vjs	Session.vim	/^map ,vjs :sp ~\/.vim\/snippets\/java.snippets$/;"	m
,vp	Session.vim	/^map <silent> ,vp :!xdg-open %$/;"	m
,vxs	Session.vim	/^map ,vxs :sp ~\/.vim\/snippets\/xml.snippets$/;"	m
,w	Session.vim	/^nmap ,w :w!$/;"	m
,wc	Session.vim	/^map ,wc :call SwitchToProject("CONTACTS")$/;"	m
,wf	Session.vim	/^map ,wf :call SwitchToProject("FRA")$/;"	m
,wh	Session.vim	/^map ,wh :call SwitchToProject("CALL_HISTORY")$/;"	m
,wp	Session.vim	/^map ,wp :call SwitchToProject("PROVIDER")$/;"	m
,wr	Session.vim	/^map ,wr :call SwitchToProject("RES")$/;"	m
,x	Session.vim	/^nmap ,x :xa!$/;"	m
,y	Session.vim	/^map ,y :YRShow$/;"	m
,z	Session.vim	/^map ,z <Plug>ZoomWin$/;"	m
0	Session.vim	/^map 0 ^$/;"	m
014l	Session.vim	/^normal! 014l$/;"	m
<C-Tab>	Session.vim	/^inoremap <C-Tab> 	$/;"	m
<F2>	Session.vim	/^noremap <F2> :NERDTreeToggle$/;"	m
<F3>	Session.vim	/^noremap <F3> :NumbersToggle$/;"	m
<F9>	Session.vim	/^map <F9> ggVGg?$/;"	m
<Nul><Nul>c	Session.vim	/^nmap <Nul><Nul>c :vert scs find c =expand("<cword>")$/;"	m
<Nul><Nul>d	Session.vim	/^nmap <Nul><Nul>d :vert scs find d =expand("<cword>")$/;"	m
<Nul><Nul>e	Session.vim	/^nmap <Nul><Nul>e :vert scs find e =expand("<cword>")$/;"	m
<Nul><Nul>f	Session.vim	/^nmap <Nul><Nul>f :vert scs find f =expand("<cfile>")$/;"	m
<Nul><Nul>g	Session.vim	/^nmap <Nul><Nul>g :vert scs find g =expand("<cword>")$/;"	m
<Nul><Nul>i	Session.vim	/^nmap <Nul><Nul>i :vert scs find i ^=expand("<cfile>")$/;"	m
<Nul><Nul>s	Session.vim	/^nmap <Nul><Nul>s :vert scs find s =expand("<cword>")$/;"	m
<Nul><Nul>t	Session.vim	/^nmap <Nul><Nul>t :vert scs find t =expand("<cword>")$/;"	m
<Nul>c	Session.vim	/^nmap <Nul>c :scs find c =expand("<cword>")$/;"	m
<Nul>d	Session.vim	/^nmap <Nul>d :scs find d =expand("<cword>")$/;"	m
<Nul>e	Session.vim	/^nmap <Nul>e :scs find e =expand("<cword>")$/;"	m
<Nul>f	Session.vim	/^nmap <Nul>f :scs find f =expand("<cfile>")$/;"	m
<Nul>g	Session.vim	/^nmap <Nul>g :scs find g =expand("<cword>")$/;"	m
<Nul>i	Session.vim	/^nmap <Nul>i :scs find i ^=expand("<cfile>")$/;"	m
<Nul>s	Session.vim	/^nmap <Nul>s :scs find s =expand("<cword>")$/;"	m
<Nul>t	Session.vim	/^nmap <Nul>t :scs find t =expand("<cword>")$/;"	m
<Plug>CVSEdit	Session.vim	/^nnoremap <silent> <Plug>CVSEdit :CVSEdit$/;"	m
<Plug>CVSEditors	Session.vim	/^nnoremap <silent> <Plug>CVSEditors :CVSEditors$/;"	m
<Plug>CVSUnedit	Session.vim	/^nnoremap <silent> <Plug>CVSUnedit :CVSUnedit$/;"	m
<Plug>CVSWatchAdd	Session.vim	/^nnoremap <silent> <Plug>CVSWatchAdd :CVSWatch add$/;"	m
<Plug>CVSWatchOff	Session.vim	/^nnoremap <silent> <Plug>CVSWatchOff :CVSWatch off$/;"	m
<Plug>CVSWatchOn	Session.vim	/^nnoremap <silent> <Plug>CVSWatchOn :CVSWatch on$/;"	m
<Plug>CVSWatchRemove	Session.vim	/^nnoremap <silent> <Plug>CVSWatchRemove :CVSWatch remove$/;"	m
<Plug>CVSWatchers	Session.vim	/^nnoremap <silent> <Plug>CVSWatchers :CVSWatchers$/;"	m
<Plug>CalendarH	Session.vim	/^nnoremap <silent> <Plug>CalendarH :cal Calendar(1)$/;"	m
<Plug>CalendarV	Session.vim	/^nnoremap <silent> <Plug>CalendarV :cal Calendar(0)$/;"	m
<Plug>NERDCommenterAlignBoth	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("n", "AlignBoth")$/;"	m
<Plug>NERDCommenterAlignLeft	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("n", "AlignLeft")$/;"	m
<Plug>NERDCommenterAppend	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterAppend :call NERDComment("n", "Append")$/;"	m
<Plug>NERDCommenterComment	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("n", "Comment")$/;"	m
<Plug>NERDCommenterInvert	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("n", "Invert")$/;"	m
<Plug>NERDCommenterMinimal	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("n", "Minimal")$/;"	m
<Plug>NERDCommenterNested	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("n", "Nested")$/;"	m
<Plug>NERDCommenterSexy	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("n", "Sexy")$/;"	m
<Plug>NERDCommenterToEOL	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment("n", "ToEOL")$/;"	m
<Plug>NERDCommenterToggle	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("n", "Toggle")$/;"	m
<Plug>NERDCommenterUncomment	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("n", "Uncomment")$/;"	m
<Plug>NERDCommenterYank	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("n", "Yank")$/;"	m
<Plug>NetrwBrowseX	Session.vim	/^nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)$/;"	m
<Plug>SurroundRepeat	Session.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>VCSAdd	Session.vim	/^nnoremap <silent> <Plug>VCSAdd :VCSAdd$/;"	m
<Plug>VCSAnnotate	Session.vim	/^nnoremap <silent> <Plug>VCSAnnotate :VCSAnnotate$/;"	m
<Plug>VCSClearAndGotoOriginal	Session.vim	/^nnoremap <silent> <Plug>VCSClearAndGotoOriginal :VCSGotoOriginal!$/;"	m
<Plug>VCSCommit	Session.vim	/^nnoremap <silent> <Plug>VCSCommit :VCSCommit$/;"	m
<Plug>VCSDelete	Session.vim	/^nnoremap <silent> <Plug>VCSDelete :VCSDelete$/;"	m
<Plug>VCSDiff	Session.vim	/^nnoremap <silent> <Plug>VCSDiff :VCSDiff$/;"	m
<Plug>VCSGotoOriginal	Session.vim	/^nnoremap <silent> <Plug>VCSGotoOriginal :VCSGotoOriginal$/;"	m
<Plug>VCSInfo	Session.vim	/^nnoremap <silent> <Plug>VCSInfo :VCSInfo$/;"	m
<Plug>VCSLock	Session.vim	/^nnoremap <silent> <Plug>VCSLock :VCSLock$/;"	m
<Plug>VCSLog	Session.vim	/^nnoremap <silent> <Plug>VCSLog :VCSLog$/;"	m
<Plug>VCSRevert	Session.vim	/^nnoremap <silent> <Plug>VCSRevert :VCSRevert$/;"	m
<Plug>VCSReview	Session.vim	/^nnoremap <silent> <Plug>VCSReview :VCSReview$/;"	m
<Plug>VCSSplitAnnotate	Session.vim	/^nnoremap <silent> <Plug>VCSSplitAnnotate :VCSAnnotate!$/;"	m
<Plug>VCSStatus	Session.vim	/^nnoremap <silent> <Plug>VCSStatus :VCSStatus$/;"	m
<Plug>VCSUnlock	Session.vim	/^nnoremap <silent> <Plug>VCSUnlock :VCSUnlock$/;"	m
<Plug>VCSUpdate	Session.vim	/^nnoremap <silent> <Plug>VCSUpdate :VCSUpdate$/;"	m
<Plug>VCSVimDiff	Session.vim	/^nnoremap <silent> <Plug>VCSVimDiff :VCSVimDiff$/;"	m
<Plug>ZenCodingAnchorizeSummary	Session.vim	/^inoremap <Plug>ZenCodingAnchorizeSummary :call zencoding#anchorizeURL(1)$/;"	m
<Plug>ZenCodingAnchorizeSummary	Session.vim	/^nnoremap <Plug>ZenCodingAnchorizeSummary :call zencoding#anchorizeURL(1)$/;"	m
<Plug>ZenCodingAnchorizeURL	Session.vim	/^inoremap <Plug>ZenCodingAnchorizeURL :call zencoding#anchorizeURL(0)$/;"	m
<Plug>ZenCodingAnchorizeURL	Session.vim	/^nnoremap <Plug>ZenCodingAnchorizeURL :call zencoding#anchorizeURL(0)$/;"	m
<Plug>ZenCodingBalanceTagInwardInsert	Session.vim	/^inoremap <Plug>ZenCodingBalanceTagInwardInsert :call zencoding#balanceTag(1)$/;"	m
<Plug>ZenCodingBalanceTagInwardNormal	Session.vim	/^nnoremap <Plug>ZenCodingBalanceTagInwardNormal :call zencoding#balanceTag(1)$/;"	m
<Plug>ZenCodingBalanceTagInwardVisual	Session.vim	/^vnoremap <Plug>ZenCodingBalanceTagInwardVisual :call zencoding#balanceTag(2)$/;"	m
<Plug>ZenCodingBalanceTagOutwardInsert	Session.vim	/^inoremap <Plug>ZenCodingBalanceTagOutwardInsert :call zencoding#balanceTag(-1)$/;"	m
<Plug>ZenCodingBalanceTagOutwardNormal	Session.vim	/^nnoremap <Plug>ZenCodingBalanceTagOutwardNormal :call zencoding#balanceTag(-1)$/;"	m
<Plug>ZenCodingBalanceTagOutwardVisual	Session.vim	/^vnoremap <Plug>ZenCodingBalanceTagOutwardVisual :call zencoding#balanceTag(-2)$/;"	m
<Plug>ZenCodingCodePretty	Session.vim	/^vnoremap <Plug>ZenCodingCodePretty :call zencoding#codePretty()$/;"	m
<Plug>ZenCodingExpandAbbr	Session.vim	/^inoremap <Plug>ZenCodingExpandAbbr u:call zencoding#expandAbbr(0,"")$/;"	m
<Plug>ZenCodingExpandNormal	Session.vim	/^nnoremap <Plug>ZenCodingExpandNormal :call zencoding#expandAbbr(3,"")$/;"	m
<Plug>ZenCodingExpandVisual	Session.vim	/^vnoremap <Plug>ZenCodingExpandVisual :call zencoding#expandAbbr(2,"")$/;"	m
<Plug>ZenCodingExpandWord	Session.vim	/^inoremap <Plug>ZenCodingExpandWord u:call zencoding#expandAbbr(1,"")$/;"	m
<Plug>ZenCodingExpandWord	Session.vim	/^nnoremap <Plug>ZenCodingExpandWord :call zencoding#expandAbbr(1,"")$/;"	m
<Plug>ZenCodingImageSize	Session.vim	/^inoremap <Plug>ZenCodingImageSize :call zencoding#imageSize()$/;"	m
<Plug>ZenCodingImageSize	Session.vim	/^nnoremap <Plug>ZenCodingImageSize :call zencoding#imageSize()$/;"	m
<Plug>ZenCodingMergeLines	Session.vim	/^vnoremap <Plug>ZenCodingMergeLines :call zencoding#mergeLines()$/;"	m
<Plug>ZenCodingNext	Session.vim	/^inoremap <Plug>ZenCodingNext :call zencoding#moveNextPrev(0)$/;"	m
<Plug>ZenCodingNext	Session.vim	/^nnoremap <Plug>ZenCodingNext :call zencoding#moveNextPrev(0)$/;"	m
<Plug>ZenCodingPrev	Session.vim	/^inoremap <Plug>ZenCodingPrev :call zencoding#moveNextPrev(1)$/;"	m
<Plug>ZenCodingPrev	Session.vim	/^nnoremap <Plug>ZenCodingPrev :call zencoding#moveNextPrev(1)$/;"	m
<Plug>ZenCodingRemoveTag	Session.vim	/^inoremap <Plug>ZenCodingRemoveTag :call zencoding#removeTag()$/;"	m
<Plug>ZenCodingRemoveTag	Session.vim	/^nnoremap <Plug>ZenCodingRemoveTag :call zencoding#removeTag()$/;"	m
<Plug>ZenCodingSplitJoinTagInsert	Session.vim	/^inoremap <Plug>ZenCodingSplitJoinTagInsert :call zencoding#splitJoinTag()$/;"	m
<Plug>ZenCodingSplitJoinTagNormal	Session.vim	/^nnoremap <Plug>ZenCodingSplitJoinTagNormal :call zencoding#splitJoinTag()$/;"	m
<Plug>ZenCodingToggleComment	Session.vim	/^inoremap <Plug>ZenCodingToggleComment :call zencoding#toggleComment()$/;"	m
<Plug>ZenCodingToggleComment	Session.vim	/^nnoremap <Plug>ZenCodingToggleComment :call zencoding#toggleComment()$/;"	m
<S-Tab>	Session.vim	/^inoremap <silent> <S-Tab> =BackwardsSnippet()$/;"	m
AboutHandler	main.py	/^class AboutHandler(tornado.web.RequestHandler):$/;"	c
ContentHandler	main.py	/^class ContentHandler(tornado.web.RequestHandler):$/;"	c
DbToolsTest	tests/test_db_tools.py	/^class DbToolsTest(unittest.TestCase):$/;"	c
Loader	main.py	/^from tornado.template import Loader$/;"	i
MainHandler	main.py	/^class MainHandler(tornado.web.RequestHandler):$/;"	c
ParserTestCase	tests/test_parser.py	/^class ParserTestCase(unittest.TestCase):$/;"	c
SessionLoad	Session.vim	/^let SessionLoad = 1$/;"	v
TITLE_TAGS	tools/xml_parser.py	/^TITLE_TAGS = ["h1", "h2", "h3"];$/;"	v
Template	main.py	/^from tornado.template import Template$/;"	i
[%	Session.vim	/^vmap [% [%m'gv``$/;"	m
]%	Session.vim	/^vmap ]% ]%m'gv``$/;"	m
a%	Session.vim	/^vmap a% [%v]%$/;"	m
application	main.py	/^application = tornado.web.Application([$/;"	v
blog_40204	blogs_20130128.html	/^      <h2><a href="#top" class='top'>ÂõûÂà∞È°∂ÈÉ®<\/a><a name="blog_40204" href="http:\/\/my.oschina.net\/u\/236164\/blog\/40204">Â¶Ç‰ΩïÂú®Ê∫êÁ†ÅÁéØÂ¢ÉÂ§ñÁºñËØë<\/a><\/h2>$/;"	a
blog_51022	blogs_20130128.html	/^      <h2><a href="#top" class='top'>ÂõûÂà∞È°∂ÈÉ®<\/a><a name="blog_51022" href="http:\/\/my.oschina.net\/u\/236164\/blog\/51022">android‰∏≠Â¶Ç‰ΩïÊü•ÁúãÊüê‰∏™Á∫øÁ®ãÁöÑlogcat<\/a><\/h2>$/;"	a
blog_53196	blogs_20130128.html	/^      <h2><a href="#top" class='top'>ÂõûÂà∞È°∂ÈÉ®<\/a><a name="blog_53196" href="http:\/\/my.oschina.net\/u\/236164\/blog\/53196">ÂëΩ‰ª§Ë°å‰∏ãË∞ÉËØïandroidÂ∫îÁî®<\/a><\/h2>$/;"	a
blog_53646	blogs_20130128.html	/^      <h2><a href="#top" class='top'>ÂõûÂà∞È°∂ÈÉ®<\/a><a name="blog_53646" href="http:\/\/my.oschina.net\/u\/236164\/blog\/53646">Áúã‰π¶Âíå‰∏äÁΩëËøô‰∏§ÁßçËé∑ÂèñÁü•ËØÜÁöÑ‰∏§ÁßçÊïàÁéáÁöÑÂØπÊØî<\/a><\/h2>$/;"	a
blog_55980	blogs_20130128.html	/^      <h2><a href="#top" class='top'>ÂõûÂà∞È°∂ÈÉ®<\/a><a name="blog_55980" href="http:\/\/my.oschina.net\/u\/236164\/blog\/55980">hhkbÂ∑≤ÂÖ•ÊâãÔºåËØ∑Á•ñÂõΩ‰∫∫Ê∞ëÊîæÂøÉ<\/a><\/h2>$/;"	a
blog_57544	blogs_20130128.html	/^      <h2><a href="#top" class='top'>ÂõûÂà∞È°∂ÈÉ®<\/a><a name="blog_57544" href="http:\/\/my.oschina.net\/u\/236164\/blog\/57544">vimË∞ÉËØïandroidÈ°πÁõÆËÑöÊú¨ÂÆåÊàê<\/a><\/h2>$/;"	a
blog_61529	blog/2.html	/^      <h2><a name="blog_61529" class="title" href="http:\/\/my.oschina.net\/u\/236164\/blog\/61529">ËæπËøêË°åjunitÔºåËæπË∞ÉËØïÔºåËõãÁñº<\/a><\/h2>$/;"	a
blog_71559	blog/3.html	/^    <h2><a name="blog_71559" class="title" href="http:\/\/my.oschina.net\/u\/236164\/blog\/71559">androidÊñáÊ°£Êü•ËØ¢Â∞èÂ∑•ÂÖ∑<\/a><\/h2>$/;"	a
blog_97086	blog/1.html	/^    <h2><a name="blog_97086" class="title" href="http:\/\/my.oschina.net\/u\/236164\/blog\/97086">ÂñµÁöÑÔºåËØ•ÂÜô‰∏Ä‰∏ãÂçöÂÆ¢‰∫Ü<\/a><\/h2>$/;"	a
build_values	main.py	/^    def build_values(self):$/;"	m	class:ContentHandler
build_values	main.py	/^    def build_values(self):$/;"	m	class:MainHandler
clear_blog_table	db_tools.py	/^def clear_blog_table():$/;"	f
codecs	tools/xml_parser.py	/^import codecs$/;"	i
create_db	db_tools.py	/^def create_db():$/;"	f
cs	Session.vim	/^nmap cs <Plug>Csurround$/;"	m
ds	Session.vim	/^nmap ds <Plug>Dsurround$/;"	m
expat	tools/xml_parser.py	/^from xml.parsers import expat$/;"	i
get	main.py	/^    def get(self):$/;"	m	class:AboutHandler
get	main.py	/^    def get(self):$/;"	m	class:ContentHandler
get	main.py	/^    def get(self):$/;"	m	class:MainHandler
get_class	utils/xml_utils.py	/^def get_class(node):$/;"	f
get_connection	tools/db.py	/^def get_connection():$/;"	f
get_title	tools/xml_parser.py	/^def get_title(dom, tag):$/;"	f
gx	Session.vim	/^nmap gx <Plug>NetrwBrowseX$/;"	m
invoke_with_param	tests/test_db_tools.py	/^    def invoke_with_param(self, param):$/;"	m	class:DbToolsTest
ioloop	main.py	/^import tornado.ioloop$/;"	i
isRequestReady	js/ajax.js	/^function isRequestReady() {$/;"	f
isRequestReady	js/base.js	/^function isRequestReady() {$/;"	f
is_argument_valid	db_tools.py	/^def is_argument_valid():$/;"	f
is_html	db_tools.py	/^def is_html(file_path):$/;"	f
loadContent	js/base.js	/^function loadContent(type) {$/;"	f
loadXml	js/ajax.js	/^function loadXml() {$/;"	f
loader	main.py	/^	loader = Loader(".\/")$/;"	v	class:MainHandler
methods_dict	db_tools.py	/^methods_dict = dict(update=update_db_for_blog, create=create_db, print_blog=print_blog_table);$/;"	v
os	db_tools.py	/^import os$/;"	i
parse	tools/xml_parser.py	/^from xml.dom.minidom import parse$/;"	i
parse_title	tools/xml_parser.py	/^def parse_title(file_path):$/;"	f
print_blog_table	db_tools.py	/^def print_blog_table():$/;"	f
s:cpo_save	Session.vim	/^let s:cpo_save=&cpo$/;"	v
s:l	Session.vim	/^let s:l = 51 - ((30 * winheight(0) + 16) \/ 33)$/;"	v
s:so_save	Session.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:sx	Session.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:wipebuf	Session.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
sqlite3	db_tools.py	/^import sqlite3$/;"	i
sqlite3	tools/db.py	/^import sqlite3$/;"	i
subprocess	tests/test_db_tools.py	/^import subprocess$/;"	i
sys	db_tools.py	/^import sys$/;"	i
test_create_db	tests/test_db_tools.py	/^    def test_create_db(self):$/;"	m	class:DbToolsTest
test_not_valid	tests/test_db_tools.py	/^    def test_not_valid(self):$/;"	m	class:DbToolsTest
test_parse_title1	tests/test_parser.py	/^    def test_parse_title1(self):$/;"	m	class:ParserTestCase
test_parse_title2	tests/test_parser.py	/^    def test_parse_title2(self):$/;"	m	class:ParserTestCase
test_parser	tests/test_parser.py	/^def test_parser():$/;"	f
test_update_db	tests/test_db_tools.py	/^    def test_update_db(self):$/;"	m	class:DbToolsTest
to_utf8	utils/string_utils.py	/^def to_utf8(s):$/;"	f
tools	db_tools.py	/^import tools.xml_parser$/;"	i
tornado	main.py	/^import tornado.ioloop$/;"	i
tornado	main.py	/^import tornado.web$/;"	i
unittest	tests/test_db_tools.py	/^import unittest$/;"	i
unittest	tests/test_parser.py	/^import unittest$/;"	i
update_db	db_tools.py	/^def update_db(folder):$/;"	f
update_db_for_blog	db_tools.py	/^def update_db_for_blog():$/;"	f
update_db_for_tests	db_tools.py	/^def update_db_for_tests():$/;"	f
urlskip	static/licenses.html	/^<p><a name="urlskip"><\/a>Stable links to each license's alternative$/;"	a
web	main.py	/^import tornado.web$/;"	i
xmlReq	js/ajax.js	/^var xmlReq;$/;"	v
xmlReq	js/base.js	/^var xmlReq;$/;"	v
xmlReq.onreadystatechange	js/ajax.js	/^    xmlReq.onreadystatechange = function() {$/;"	f
xmlReq.onreadystatechange	js/base.js	/^    xmlReq.onreadystatechange = function () {$/;"	f
xml_parser	db_tools.py	/^import tools.xml_parser$/;"	i
xml_parser	tests/test_parser.py	/^from tools import xml_parser$/;"	i
yS	Session.vim	/^nmap yS <Plug>YSurround$/;"	m
ySS	Session.vim	/^nmap ySS <Plug>YSsurround$/;"	m
ySs	Session.vim	/^nmap ySs <Plug>YSsurround$/;"	m
ys	Session.vim	/^nmap ys <Plug>Ysurround$/;"	m
yss	Session.vim	/^nmap yss <Plug>Yssurround$/;"	m
zt	Session.vim	/^normal! zt$/;"	m
√¢	Session.vim	/^cmap √¢ <S-Left>$/;"	m
√§	Session.vim	/^cnoremap √§ <S-Right>$/;"	m
√¶	Session.vim	/^cmap √¶ <S-Right>$/;"	m
√®	Session.vim	/^cnoremap √® $/;"	m
√™	Session.vim	/^nmap √™ mz:m+$/;"	m
√™	Session.vim	/^vmap √™ :m'>+$/;"	m
√´	Session.vim	/^nmap √´ mz:m-2$/;"	m
√´	Session.vim	/^vmap √´ :m'<-2$/;"	m
